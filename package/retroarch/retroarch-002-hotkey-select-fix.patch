diff --git a/input/input_driver.c b/input/input_driver.c
index 7eb6221aad..e4927f0124 100644
--- a/input/input_driver.c
+++ b/input/input_driver.c
@@ -411,6 +411,10 @@ static unsigned input_driver_max_users            = 0;
 static const void *hid_data                       = NULL;
 #endif
 
+/* number of frames required to trigger the hotkey */
+#define HOTKEY_DELAY 5
+static unsigned hotkey_counter = 0;
+
 /**
  * check_input_driver_block_hotkey:
  *
@@ -926,13 +930,17 @@ void input_menu_keys_pressed(void *data, input_bits_t *p_new_state)
                && current_input->input_state(current_input_data, joypad_info,
                   &binds[0], port, RETRO_DEVICE_JOYPAD, 0, RARCH_ENABLE_HOTKEY))
          {
-            input_driver_block_libretro_input = true;
+           if (hotkey_counter < HOTKEY_DELAY)
+              hotkey_counter++;
+           if (hotkey_counter >= HOTKEY_DELAY) {
+             input_driver_block_libretro_input = true;
             break;
+          }
          }
-         else
-         {
-            input_driver_block_hotkey         = true;
-            break;
+         else {
+            hotkey_counter = 0;
+            input_driver_block_hotkey = true;
+           break;
          }
       }
    }
@@ -1103,6 +1111,7 @@ void input_keys_pressed(void *data, input_bits_t *p_new_state)
    input_driver_block_libretro_input            = false;
    input_driver_block_hotkey                    = false;
 
+
    if (     current_input->keyboard_mapping_is_blocked
          && current_input->keyboard_mapping_is_blocked(current_input_data))
       input_driver_block_hotkey = true;
@@ -1116,9 +1125,17 @@ void input_keys_pressed(void *data, input_bits_t *p_new_state)
             && current_input->input_state(
                current_input_data, joypad_info, &binds, 0,
                RETRO_DEVICE_JOYPAD, 0, RARCH_ENABLE_HOTKEY))
-         input_driver_block_libretro_input = true;
-      else
-         input_driver_block_hotkey         = true;
+         {
+           if (hotkey_counter < HOTKEY_DELAY)
+              hotkey_counter++;
+           if (hotkey_counter >= HOTKEY_DELAY) {
+             input_driver_block_libretro_input = true;
+          }
+         }
+         else {
+            hotkey_counter = 0;
+            input_driver_block_hotkey = true;
+         }
    }
 
    if (binds[RARCH_GAME_FOCUS_TOGGLE].valid)
