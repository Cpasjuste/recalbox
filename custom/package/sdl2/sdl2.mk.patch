diff --git a/package/sdl2/sdl2.mk b/package/sdl2/sdl2.mk
index 814cc19..36589e2 100644
--- a/package/sdl2/sdl2.mk
+++ b/package/sdl2/sdl2.mk
@@ -4,113 +4,121 @@
 #
 ################################################################################
 
-SDL2_VERSION = 2.0.3
+# mali patched version
+#ifeq ($(BR2_PACKAGE_MALI_OPENGLES_SDK),y)
+#SDL2_VERSION = 3b3a4491d9fe5d97e106390c68ddc4f4dbb541b8
+#SDL2_SITE = $(call github,mihailescu2m,libsdl2-2.0.2-dfsg1,$(SDL2_VERSION))
+#else
+SDL2_VERSION = 2.0.4
 SDL2_SOURCE = SDL2-$(SDL2_VERSION).tar.gz
 SDL2_SITE = http://www.libsdl.org/release
+#endif
+
 SDL2_LICENSE = zlib
 SDL2_LICENSE_FILES = COPYING.txt
 SDL2_INSTALL_STAGING = YES
-SDL2_CONFIG_SCRIPTS = sdl2-config
-
-SDL2_CONF_OPTS += \
-	--disable-rpath \
-	--disable-arts \
-	--disable-esd \
-	--disable-dbus \
-	--disable-pulseaudio \
-	--disable-video-opengl \
-	--disable-video-opengles \
-	--disable-video-wayland
-
-# We must enable static build to get compilation successful.
-SDL2_CONF_OPTS += --enable-static
+SDL2_DEPENDENCIES = udev
 
-ifeq ($(BR2_PACKAGE_HAS_UDEV),y)
-SDL2_DEPENDENCIES += udev
-SDL2_CONF_OPTS += --enable-libudev
+ifeq ($(BR2_PACKAGE_HAS_LIBGLES),y)
+SDL2_DEPENDENCIES += $(LIBGLES_DEPENDENCIES)
+SDL2_CONF_OPTS += --enable-video-opengles
 else
-SDL2_CONF_OPTS += --disable-libudev
+SDL2_CONF_OPTS += --disable-video-opengles
 endif
 
-ifeq ($(BR2_PACKAGE_SDL2_DIRECTFB),y)
-SDL2_DEPENDENCIES += directfb
-SDL2_CONF_OPTS += --enable-video-directfb
-SDL2_CONF_ENV = ac_cv_path_DIRECTFBCONFIG=$(STAGING_DIR)/usr/bin/directfb-config
-else
-SDL2_CONF_OPTS += --disable-video-directfb
+# add x11 dependencies to compile sdl2 only once there are already done (otherwise, dosbox doesn't work in fullscreen in X11)
+ifeq ($(BR2_PACKAGE_XLIB_LIBXI),y)
+SDL2_DEPENDENCIES += xlib_libXi
 endif
-
-# x-includes and x-libraries must be set for cross-compiling
-# By default x_includes and x_libraries contains unsafe paths.
-# (/usr/X11R6/include and /usr/X11R6/lib)
-ifeq ($(BR2_PACKAGE_SDL2_X11),y)
-SDL2_DEPENDENCIES += xlib_libX11 xlib_libXext
-
-# X11/extensions/shape.h is provided by libXext.
-SDL2_CONF_OPTS += --enable-video-x11 \
-	--with-x=$(STAGING_DIR) \
-	--x-includes=$(STAGING_DIR)/usr/include \
-	--x-libraries=$(STAGING_DIR)/usr/lib  \
-	--enable-video-x11-xshape
-
 ifeq ($(BR2_PACKAGE_XLIB_LIBXCURSOR),y)
 SDL2_DEPENDENCIES += xlib_libXcursor
-SDL2_CONF_OPTS += --enable-video-x11-xcursor
-else
-SDL2_CONF_OPTS += --disable-video-x11-xcursor
 endif
-
 ifeq ($(BR2_PACKAGE_XLIB_LIBXINERAMA),y)
 SDL2_DEPENDENCIES += xlib_libXinerama
-SDL2_CONF_OPTS += --enable-video-x11-xinerama
-else
-SDL2_CONF_OPTS += --disable-video-x11-xinerama
+endif
+ifeq ($(BR2_PACKAGE_XLIB_LIBXRANDR),y)
+SDL2_DEPENDENCIES += xlib_libXrandr
 endif
 
-ifeq ($(BR2_PACKAGE_XLIB_LIBXI),y)
-SDL2_DEPENDENCIES += xlib_libXi
-SDL2_CONF_OPTS += --enable-video-x11-xinput
-else
-SDL2_CONF_OPTS += --disable-video-x11-xinput
+ifeq ($(BR2_PACKAGE_HAS_LIBEGL),y)
+SDL2_DEPENDENCIES += $(LIBEGL_DEPENDENCIES)
+ifeq ($(BR2_PACKAGE_PROVIDES_LIBEGL),"rpi-userland")
+SDL2_CONF_OPTS += --host=$(subst -$(TARGET_VENDOR)-$(TARGET_OS)-,-raspberry-linux-,$(GNU_TARGET_NAME))
+endif
 endif
 
-ifeq ($(BR2_PACKAGE_XLIB_LIBXRANDR),y)
-SDL2_DEPENDENCIES += xlib_libXrandr
-SDL2_CONF_OPTS += --enable-video-x11-xrandr
+SDL2_CONF_OPTS += --enable-video-fbdev
+
+# Note: SDL2 looks for X11 headers in host dirs, so if you want to build SDL2
+#       with X11 support, better make it safe for cross compilation first.
+# hum, ok, but i want it for x86 please
+ifeq ($(BR2_x86_i586),y)
+SDL2_CONF_OPTS += --enable-video-x11
+else ifeq ($(BR2_x86_64),y)
+SDL2_CONF_OPTS += --enable-video-x11
 else
-SDL2_CONF_OPTS += --disable-video-x11-xrandr
+SDL2_CONF_OPTS += --disable-video-x11
 endif
 
-ifeq ($(BR2_PACKAGE_XLIB_LIBXSCRNSAVER),y)
-SDL2_DEPENDENCIES += xlib_libXScrnSaver
-SDL2_CONF_OPTS += --enable-video-x11-scrnsaver
+ifeq ($(BR2_PACKAGE_DIRECTFB),y)
+SDL2_DEPENDENCIES += directfb
+SDL2_CONF_OPTS += --enable-video-directfb
+SDL2_CONF_ENV += ac_cv_path_DIRECTFBCONFIG=$(STAGING_DIR)/usr/bin/directfb-config
 else
-SDL2_CONF_OPTS += --disable-video-x11-scrnsaver
+SDL2_CONF_OPTS += --disable-video-directfb
 endif
 
-ifeq ($(BR2_PACKAGE_XLIB_LIBXXF86VM),y)
-SDL2_DEPENDENCIES += xlib_libXxf86vm
-SDL2_CONF_OPTS += --enable-video-x11-vm
+ifeq ($(BR2_PACKAGE_ALSA_LIB),y)
+SDL2_DEPENDENCIES += alsa-lib
+SDL2_CONF_OPTS += --enable-alsa --disable-oss
 else
-SDL2_CONF_OPTS += --disable-video-x11-vm
+SDL2_CONF_OPTS += --disable-alsa
 endif
 
+ifeq ($(BR2_PACKAGE_PULSEAUDIO),y)
+SDL2_DEPENDENCIES += pulseaudio
+SDL2_CONF_OPTS += --enable-pulseaudio
 else
-SDL2_CONF_OPTS += --disable-video-x11 --without-x
+SDL2_CONF_OPTS += --disable-pulseaudio
 endif
 
-ifeq ($(BR2_PACKAGE_TSLIB),y)
-SDL2_DEPENDENCIES += tslib
-SDL2_CONF_OPTS += --enable-input-tslib
+SDL2_CONF_OPTS += --disable-esd
+
+ifeq ($(BR2_PACKAGE_HAS_UDEV),y)
+SDL2_CONF_OPTS += --enable-libudev
 else
-SDL2_CONF_OPTS += --disable-input-tslib
+SDL2_CONF_OPTS += --disable-libudev
 endif
 
-ifeq ($(BR2_PACKAGE_ALSA_LIB),y)
-SDL2_DEPENDENCIES += alsa-lib
-SDL2_CONF_OPTS += --enable-alsa
+ifeq ($(BR2_PACKAGE_DBUS),y)
+SDL2_CONF_OPTS += --enable-dbus
 else
-SDL2_CONF_OPTS += --disable-alsa
+SDL2_CONF_OPTS += --disable-dbus
 endif
 
+# OpenDingux hack: We've got tslib to make porting easier, but we've got no
+#                  touch screen, so having SDL try to use tslib is pointless.
+# ifeq ($(BR2_PACKAGE_TSLIB),y)
+# SDL2_DEPENDENCIES += tslib
+# SDL2_CONF_OPTS += --enable-input-tslib
+# else
+SDL2_CONF_OPTS += --disable-input-tslib
+# endif
+
+SDL2_CONF_OPTS += --disable-rpath
+
+define SDL2_FIXUP_SDL2_CONFIG
+	$(SED) 's%^prefix=.*%prefix=$(STAGING_DIR)/usr%' \
+		$(STAGING_DIR)/usr/bin/sdl2-config
+	$(SED) 's%^exec_prefix=.*%exec_prefix=$${prefix}%' \
+		$(STAGING_DIR)/usr/bin/sdl2-config
+endef
+
+define SDL2_REMOVE_SDL2_CONFIG
+	mv $(TARGET_DIR)/usr/bin/sdl2-config $(HOST_DIR)/usr/bin
+endef
+
+SDL2_POST_INSTALL_TARGET_HOOKS += SDL2_REMOVE_SDL2_CONFIG
+SDL2_POST_INSTALL_STAGING_HOOKS += SDL2_FIXUP_SDL2_CONFIG
+
 $(eval $(autotools-package))
