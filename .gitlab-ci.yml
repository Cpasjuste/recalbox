image: docker:latest

stages:
  - build
  - release
  - purge
  - deploy
  - canary
  - clean

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  RECALBOX_MAIN_VERSION: 4.1.0
  STACK_NAME: archive
  IMAGE: recalbox/archive

.build_template: &build_definition
  stage: build
  script:
    - tar cvzf recalbox-emulationstation2-${ARCH}.tar.gz -C recalbox-emulationstation/ . > /dev/null
    - docker run --rm -e "ARCH=${ARCH}" -v `pwd`:/work -v /recalbox-builds/dl:/share/dl ubuntu:16.04 bash -c 'rm -rf /share/dl/recalbox-emulationstation2-${ARCH}.tar.gz && cp /work/recalbox-emulationstation2-${ARCH}.tar.gz /share/dl/recalbox-emulationstation2-${ARCH}.tar.gz'
    - sed -i "s/^RECALBOX_EMULATIONSTATION2_VERSION.*/RECALBOX_EMULATIONSTATION2_VERSION = ${ARCH}/" package/recalbox-emulationstation2/recalbox-emulationstation2.mk
    - export RECALBOX_VERSION=${CI_COMMIT_TAG:-${RECALBOX_MAIN_VERSION}-${CI_COMMIT_REF_SLUG}-${ARCH}-$(date +%Y-%m-%d-%H-%M-%S)-${CI_BUILD_ID}}
    - docker build -t recalbox-${ARCH} .
    - docker run --rm -v `pwd`:/work -v /recalbox-builds/dl:/share/dl -v /recalbox-builds/hosts/host-${ARCH}:/share/host -v /recalbox-builds/ccaches/ccache-${ARCH}:/share/ccache -e "ARCH=$ARCH" -e "RECALBOX_VERSION_LABEL=$RECALBOX_VERSION" -e "RECALBOX_CCACHE_DIR=/share/ccache" recalbox-${ARCH} 2>&1 | tee build.log | grep '>>>' || tac build.log | grep '>>>' -m 1 -B 9999 | tac
    - export DIST_DIR="updates/dist/v1/upgrade/${ARCH}"
    - mkdir -p "${DIST_DIR}"
    - cp output/images/recalbox/* "${DIST_DIR}"
    - rm -rf output/
    - for file in `ls "${DIST_DIR}"`;do sha1sum "${DIST_DIR}/${file}" > "${DIST_DIR}/${file}.sha1"; done
    - tar tf "${DIST_DIR}/root.tar.xz" | sort > "${DIST_DIR}/root.list"
    - echo "$RECALBOX_VERSION" >> "${DIST_DIR}/recalbox.version"
    - cp CHANGELOG.md "${DIST_DIR}/recalbox.changelog"
  artifacts:
    name: dist-${ARCH}-${CI_BUILD_ID}
    when: always
    paths:
      - updates/dist/v1/upgrade/${ARCH}
      - build.log
    expire_in: 2 mos

build rpi1:
  <<: *build_definition
  only:
    - master
    - tags
  variables:
    ARCH: 'rpi1'
build rpi2:
  <<: *build_definition
  only:
    - master
    - tags
  variables:
    ARCH: 'rpi2'
build rpi3:
  <<: *build_definition
  only:
    - master
    - tags
  variables:
    ARCH: 'rpi3'
build x86_64:
  <<: *build_definition
  only:
    - master
    - tags
  variables:
    ARCH: 'x86_64'
build x86:
  <<: *build_definition
  only:
    - master
    - tags
  variables:
    ARCH: 'x86'
build odroidc2:
  <<: *build_definition
  only:
    - master
    - tags
  variables:
    ARCH: 'odroidc2'
build odroidxu4:
  <<: *build_definition
  only:
    - master
    - tags
  variables:
    ARCH: 'odroidxu4'

build rpi1 for test:
  <<: *build_definition
  when: manual
  only:
    - branches
  except:
    - master
  variables:
    ARCH: 'rpi1'
build rpi2 for test:
  <<: *build_definition
  when: manual
  only:
    - branches
  except:
    - master
  variables:
    ARCH: 'rpi2'
build rpi3 for test:
  <<: *build_definition
  when: manual
  only:
    - branches
  except:
    - master
  variables:
    ARCH: 'rpi3'
build x86_64 for test:
  <<: *build_definition
  when: manual
  only:
    - branches
  except:
    - master
  variables:
    ARCH: 'x86_64'
build x86 for test:
  <<: *build_definition
  when: manual
  only:
    - branches
  except:
    - master
  variables:
    ARCH: 'x86'
build odroidc2 for test:
  <<: *build_definition
  when: manual
  only:
    - branches
  except:
    - master
  variables:
    ARCH: 'odroidc2'
build odroidxu4 for test:
  <<: *build_definition
  when: manual
  only:
    - branches
  except:
    - master
  variables:
    ARCH: 'odroidxu4'


### Release
.release_template: &release_definition
  stage: release
  variables:
    ARCHIVE_IMAGE: the image to build
    RANCHER_DIRECTORY: type of the deployment (master, review)
  script:
    - echo "Creating image $ARCHIVE_IMAGE"
    - test -n "$SKIP_IMAGES" && rm -rf updates/dist/v1/upgrade/*/*.img*
    - env | grep "CI_\|GITLAB" > envfile && cat "updates/${RANCHER_DIRECTORY}.template.html" | docker run --rm --env-file envfile -i loicmahieu/alpine-envsubst > updates/dist/index.html
    - cd updates
    - docker build -t $ARCHIVE_IMAGE .
    - docker login -u "${DOCKER_IO_LOGIN}" -p "${DOCKER_IO_PASSWORD}"
    - docker push $ARCHIVE_IMAGE

release master:
  <<: *release_definition
  variables:
    ARCHIVE_IMAGE: "${IMAGE}:master"
    RANCHER_DIRECTORY: master
  only:
  - master

release review:
  <<: *release_definition
  when: manual
  variables:
    ARCHIVE_IMAGE: ${IMAGE}:${CI_COMMIT_REF_SLUG}
    RANCHER_DIRECTORY: review
    SKIP_IMAGES: 'true'
  except:
    - master


### Deploy
purge master:
  stage: purge
  image: registry.gitlab.com/recalbox/ops/rancher-cli:0.6.2
  only:
    - master
  dependencies: []
  script:
    - echo cleaning master old deployments
    - rancher rm $(rancher ps | grep "${STACK_NAME}/master-" | awk '{print $1}')

.deploy_template: &deploy_definition
  stage: deploy
  image: registry.gitlab.com/recalbox/ops/rancher-cli:0.6.2
  dependencies: []
  variables:
    ARCHIVE_IMAGE: image to deploy
    ARCHIVE_FQDN: fqdn of the service
    SERVICENAME: the rancher directory to use
    RANCHER_DIRECTORY: the rancher directory to use
  script:
    - cd updates/rancher/${RANCHER_DIRECTORY}
    - sed "s/RANCHER_SERVICENAME/${SERVICENAME}/" -i docker-compose.yml rancher-compose.yml
    - rancher up -s $STACK_NAME -u --force-upgrade --batch-size 20 -d

deploy master:
  <<: *deploy_definition
  variables:
    ARCHIVE_IMAGE: ${IMAGE}:${CI_COMMIT_REF_SLUG}
    ARCHIVE_FQDN: master-${CI_PIPELINE_ID}-${STACK_NAME}-prod.recalbox.com
    SERVICENAME: master-${CI_PIPELINE_ID}
    RANCHER_DIRECTORY: master
    RECALEUR_CANARY: 15
    RECALEUR_RESPONSE: https://master-${CI_PIPELINE_ID}-${STACK_NAME}-prod.recalbox.com:8443
  before_script:
    - export RECALEUR_EXPIRE=$(date -u -d "1970.01.01-00:00:$(date +"%s + 6 * 3600"|xargs expr)" +%Y-%m-%d-%H:%M)
  only:
    - master
  environment:
    name: master
    url: https://master-${CI_PIPELINE_ID}-${STACK_NAME}-prod.recalbox.com:8443/

deploy review:
  <<: *deploy_definition
  when: manual
  variables:
    ARCHIVE_IMAGE: ${IMAGE}:${CI_COMMIT_REF_SLUG}
    ARCHIVE_FQDN: ${CI_ENVIRONMENT_SLUG}-${STACK_NAME}-prod.recalbox.com
    SERVICENAME: ${CI_ENVIRONMENT_SLUG}
    RANCHER_DIRECTORY: review
  except:
    - master
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: https://${CI_ENVIRONMENT_SLUG}-${STACK_NAME}-prod.recalbox.com/
    on_stop: clean review

validate release:
  <<: *deploy_definition
  stage: canary
  when: manual
  dependencies: []
  variables:
    RANCHER_DIRECTORY: recaleur
    RECALEUR_CANARY: 256
    RECALEUR_RESPONSE: https://master-${CI_PIPELINE_ID}-${STACK_NAME}-prod.recalbox.com:8443
  only:
    - master

emergency valve:
  <<: *deploy_definition
  stage: canary
  when: manual
  dependencies: []
  variables:
    RANCHER_DIRECTORY: recaleur
    RECALEUR_CANARY: 0
    RECALEUR_RESPONSE: https://master-${CI_PIPELINE_ID}-${STACK_NAME}-prod.recalbox.com:8443
  only:
    - master

clean review:
  image: registry.gitlab.com/recalbox/ops/rancher-cli:0.6.2
  stage: clean
  when: manual
  dependencies: []
  only:
    - branches
    - tags
  except:
    - master
  script:
    - echo "cleaning ${ARCHIVE_IMAGE} from ${STACK_NAME}/${SERVICENAME}"
    - rancher rm ${STACK_NAME}/${CI_ENVIRONMENT_SLUG}
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
