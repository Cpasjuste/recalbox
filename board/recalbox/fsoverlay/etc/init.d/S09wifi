#!/bin/ash

if [ "$1" != "start" ]; then
  exit 0
fi

## Functions ##

# readSetting <setting>
#   returns the setting value in /boot/recalbox-backup.conf
function readSetting() {
  local setting="$1"
  echo "${recalboxConfig}" | sed -n "s/^${setting}=\(.*\)$/\1/p" | head -1
}

# waitForConnmanDaemon
#   sleeps until connmand is started, up to 2 seconds
function waitForConnmanDaemon() {
  local count=0

  until connmanctl state; do
    if [ ${count} -gt 20 ]; then
      recallog -f init.log "Error: Connmand not ready. Cannot configure it."
      exit 1
    else
      sleep 0.1
      let count++
    fi
  done
}

# writeConnmanConfig [number]
#   creates a configuration file for Connman, with values from /boot/recalbox-backup.conf
#   [number] can be 2 or 3 (default is empty), it allows us to have 3 configured networks
function writeConnmanConfig() {
  local configIndex="$1"
  local outputFile="/var/lib/connman/recalbox_wifi${configIndex}.config"
  local ssid=$(readSetting "wifi${configIndex}.ssid")
  local key=$(readSetting "wifi${configIndex}.key")
  local ip=$(readSetting "wifi${configIndex}.ip")
  local netmask=$(readSetting "wifi${configIndex}.netmask")
  local gateway=$(readSetting "wifi${configIndex}.gateway")

  if [ -n "${ssid}" ]; then
    recallog "Recovering wifi configuration for SSID: ${ssid}"
    mkdir -p "/var/lib/connman"
    cat > "${outputFile}" <<EOF
[global]
Name=recalbox

[service_recalbox_${configIndex:-default}]
Type=wifi
Name=${ssid}
EOF
    if [ -n "${ip}" ] && [ -n "${netmask}" ] && [ -n "${gateway}" ]; then
      echo "IPv4=${ip}/${netmask}/${gateway}" >> "${outputFile}"
    fi
    if [ -n "${key}" ]; then
      echo "Passphrase=${key}" >> "${outputFile}"
    fi
  fi
}

## Global variables ##

recalboxConfig=$(cat /boot/recalbox-backup.conf 2> /dev/null)

## Main ##

if [ -z "${recalboxConfig}" ]; then
  recallog "No /boot/recalbox-backup.conf found to recover wifi configuration from."
  exit 0
fi

if [ $(readSetting wifi.enabled) -ne 1  ]; then
  recallog "Wifi option disabled"
  exit 0
fi

recallog "Wifi option enabled, trying to configure"
for i in '' 2 3; do
  writeConnmanConfig $i
done
waitForConnmanDaemon
connmanctl enable wifi || exit 1
wifiRegion=$(readSetting wifi.region)
if [ -n "${wifiRegion}" ]; then
  recallog "Wifi region: ${wifiRegion}"
  iw reg set "${wifiRegion}"
fi

exit 0
